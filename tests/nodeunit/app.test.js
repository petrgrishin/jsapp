// Generated by CoffeeScript 1.7.1
(function() {
  var App, Underscore;

  App = require("../../src/app");

  Underscore = require("underscore");

  module.exports.AppTest = {
    "test listener gear": function(test) {
      var appInstance, isTestPassed, listener;
      appInstance = new App();
      listener = appInstance.scope.createListener();
      isTestPassed = false;
      listener.subscribe("test", function(param) {
        return isTestPassed = param;
      });
      test.ok(!isTestPassed);
      listener.trigger("test", true);
      test.ok(isTestPassed);
      return test.done();
    },
    "test response object": function(test) {
      var appInstance, isTestPassed, responseInstance;
      appInstance = new App();
      responseInstance = appInstance.scope.createResponse();
      isTestPassed = false;
      responseInstance.bindApply(function(param) {
        return isTestPassed = param;
      });
      test.ok(!isTestPassed);
      responseInstance.apply(true);
      test.ok(isTestPassed);
      return test.done();
    },
    "test dependence scripts": function(test) {
      var appInstance, queueCall;
      appInstance = new App({}, {}, Underscore);
      queueCall = [];
      appInstance.f("first.script", function() {
        return queueCall.push("first.script");
      });
      appInstance.f("second.script", function() {
        return queueCall.push("second.script");
      });
      appInstance.apply();
      test.deepEqual(queueCall, ["first.script", "second.script"]);
      return test.done();
    }
  };

}).call(this);
